<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2012, The SAVI Project. All rights reserved.

  Horse
  Web service for a HW Resource

  Hesam Rahimi Koopayi <hesam.rahimikoopayi@utoronto.ca>
-->
<project name="horse" default="all" xmlns:ivy="antlib:org.apache.ivy.ant">
    <description>
    DESCRIPTION
  </description>

    <!-- TODO: Fill these variables. -->
    <property name="PROJECT_NAME" value="horse" />
    <property name="VERSION" value="0.1" />
    <property name="TEST_SUITE_CLASS" value="ca.savi.horse.test.TestSuite" />
    <property name="MAIN_CLASS" value="ca.savi.horse.server.HorseServer" />

    <property name="DEBUG" value="true" />

    <!-- DIRECTORIES -->
    <property name="SAVI_HOME" value="../" />
    <property name="PROJECT_HOME" value="./" />
    <property name="CAMEL_HOME" value="../camel/" />
    <property name="COBRA_HOME" value="../cobra/" />
    <property name="FINCH_HOME" value="../finch/" />
    <property name="FRONT_HOME" value="../front/" />
    <property name="GRIFFIN_HOME" value="../griffin/" />

    <property name="BUILD_DIR" value="${PROJECT_HOME}/build/" />
    <property name="CLASSES_DIR" value="${PROJECT_HOME}/build/classes/" />
    <property name="DIST_DIR" value="${PROJECT_HOME}/dist/" />
    <property name="GEN_DIR" value="${PROJECT_HOME}/build/gen-src/" />
    <property name="GEN_SRC_DIR" value="${PROJECT_HOME}/${GEN_DIR}/java/" />
    <property name="LIB_DIR" value="${PROJECT_HOME}/build/lib/" />
    <property name="CAMEL_LIB_DIR" value="${CAMEL_HOME}/build/lib/" />
    <property name="CAMEL_DIST_DIR" value="${CAMEL_HOME}/dist/" />
    <property name="COBRA_LIB_DIR" value="${COBRA_HOME}/build/lib/" />
    <property name="COBRA_DIST_DIR" value="${COBRA_HOME}/dist/" />
    <property name="FINCH_LIB_DIR" value="${FINCH_HOME}/build/lib/" />
    <property name="FINCH_DIST_DIR" value="${FINCH_HOME}/dist/" />
    <property name="FRONT_LIB_DIR" value="${FRONT_HOME}/build/lib/" />
    <property name="FRONT_DIST_DIR" value="${FRONT_HOME}/dist/" />
    <property name="GRIFFIN_LIB_DIR" value="${GRIFFIN_HOME}/build/lib/" />
    <property name="GRIFFIN_DIST_DIR" value="${GRIFFIN_HOME}/dist/" />
    <property name="RESOURCES_DIR" value="resources/" />
    <property name="SRC_DIR" value="${PROJECT_HOME}/src/java/" />
    <property name="SRC_TEST_DIR" value="${PROJECT_HOME}/test/java/" />

    <!-- CLASSPATH -->
    <path id="classpath.lib">
        <fileset dir="${LIB_DIR}" includes="*.jar" />
        <fileset dir="${CAMEL_LIB_DIR}" includes="*.jar" />
        <fileset dir="${CAMEL_DIST_DIR}" includes="*.jar" />
        <fileset dir="${COBRA_LIB_DIR}" includes="*.jar" />
        <fileset dir="${COBRA_DIST_DIR}" includes="*.jar" />
        <fileset dir="${FINCH_LIB_DIR}" includes="*.jar" />
        <fileset dir="${FINCH_DIST_DIR}" includes="*.jar" />
        <fileset dir="${FRONT_LIB_DIR}" includes="*.jar" />
        <fileset dir="${FRONT_DIST_DIR}" includes="*.jar" />
        <fileset dir="${GRIFFIN_LIB_DIR}" includes="*.jar" />
        <fileset dir="${GRIFFIN_DIST_DIR}" includes="*.jar" />
        <fileset dir="${GRIFFIN_HOME}/libs" includes="*.jar" />
    </path>

    <path id="classpath.all">
        <path refid="classpath.lib" />
        <pathelement location="${CLASSES_DIR}" />
    </path>

    <!-- TARGETS -->
    <target name="all" depends="build">
    </target>

    <target name="copyjars" description="Copies the App Engine JARs.">
        <copy todir="${LIB_DIR}" flatten="true">
            <fileset dir="${CAMEL_LIB_DIR}" includes="*.jar" />
            <fileset dir="${CAMEL_DIST_DIR}" includes="*.jar" />
            <fileset dir="${COBRA_LIB_DIR}" />
            <fileset dir="${COBRA_DIST_DIR}" />
            <fileset dir="${FINCH_LIB_DIR}" includes="*.jar" />
            <fileset dir="${FINCH_DIST_DIR}" includes="*.jar" />
            <fileset dir="${FRONT_LIB_DIR}" includes="*.jar" />
            <fileset dir="${FRONT_DIST_DIR}" includes="*.jar" />
            <fileset dir="${GRIFFIN_LIB_DIR}" includes="*.jar" />
            <fileset dir="${GRIFFIN_DIST_DIR}" includes="*.jar" />
        </copy>
    </target>

    <target name="distwar" depends="build,copyjars">
        <war destfile="${DIST_DIR}/${PROJECT_NAME}-${VERSION}.war"
          webxml="${RESOURCES_DIR}/WEB-INF/web.xml">
            <classes dir="${CLASSES_DIR}" excludes="**/WEB-INF,**/WEB-INF/*" />
            <lib dir="${LIB_DIR}" excludes="**/*servlet*" />
            <webinf dir="${RESOURCES_DIR}/WEB-INF/" />
        </war>
    </target>

    <target name="dist" depends="build">
      <manifestclasspath property="lib.list"
        jarfile="${DIST_DIR}/${PROJECT_NAME}-${VERSION}.jar">
        <classpath refid="classpath.lib" />
      </manifestclasspath>
      <jar destfile="${DIST_DIR}/${PROJECT_NAME}-${VERSION}.jar">
        <fileset dir="${CLASSES_DIR}">
          <include name="**/*"/>
        </fileset>
        <manifest>
          <attribute name="Main-Class" value="${MAIN_CLASS}" />
          <attribute name="Class-Path" value="${lib.list}" />
        </manifest>
      </jar>
    </target>

    <target name="build" depends="deps">
        <javac srcdir="${SRC_DIR}:${GEN_SRC_DIR}" includeantruntime="false"
          destdir="${CLASSES_DIR}" debug="${DEBUG}">
            <classpath refid="classpath.lib" />
        </javac>
        <copy todir="${CLASSES_DIR}">
            <fileset dir="${RESOURCES_DIR}">
                <include name="**/*" />
            </fileset>
        </copy>
    </target>

    <target name="test" depends="build-test">
        <junit>
            <classpath refid="classpath.all" />
            <formatter type="brief" usefile="false" />
            <test name="${TEST_SUITE_CLASS}" />
        </junit>
    </target>

    <target name="build-test" depends="build">
        <javac srcdir="${SRC_TEST_DIR}:${GEN_SRC_DIR}" includeantruntime="false"
          destdir="${CLASSES_DIR}" debug="${DEBUG}">
            <classpath refid="classpath.lib" />
        </javac>
    </target>

    <target name="deps" depends="prepare">
        <ivy:configure file="ivy-settings.xml" override="true" />
        <ivy:retrieve refresh="true" type="jar,bundle"
          pattern="${LIB_DIR}/[artifact].[ext]" />
    </target>

    <target name="prepare">
        <mkdir dir="${BUILD_DIR}" />
        <mkdir dir="${CLASSES_DIR}" />
        <mkdir dir="${DIST_DIR}" />
        <mkdir dir="${GEN_DIR}" />
        <mkdir dir="${GEN_SRC_DIR}" />
        <mkdir dir="${LIB_DIR}" />
        <ant antfile="${CAMEL_HOME}/build.xml" inheritall="false"
          inheritrefs="false" target="distjar" />
        <ant antfile="${COBRA_HOME}/build.xml" inheritall="false"
          inheritrefs="false" target="dist" />
        <ant antfile="${FRONT_HOME}/build.xml" inheritall="false"
          inheritrefs="false" target="dist" />
        <ant antfile="${FINCH_HOME}/build.xml" inheritall="false"
          inheritrefs="false" target="dist" />
      <ant antfile="${GRIFFIN_HOME}/build.xml" inheritall="false"
        inheritrefs="false" target="dist" />
    </target>

    <target name="clean">
        <delete dir="${BUILD_DIR}">
        </delete>
        <delete dir="${DIST_DIR}">
        </delete>
    </target>
</project>
