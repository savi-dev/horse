package ca.savi.cobra;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI
 * 2.1.3.3-hudson-757-SNAPSHOT Generated source version: 2.1
 */
@WebServiceClient(
    name = "AORFabricService",
    targetNamespace = "fabric.WSDL.AOR",
    wsdlLocation = "http://control0.vani.utoronto.ca:8080/InterconnectionFabric/AORFabricService?wsdl")
public class AORFabricService extends Service {
  private final static URL AORFABRICSERVICE_WSDL_LOCATION;
  private final static Logger logger = Logger
      .getLogger(ca.savi.cobra.AORFabricService.class.getName());
  static {
    URL url = null;
    try {
      URL baseUrl;
      baseUrl = ca.savi.cobra.AORFabricService.class.getResource(".");
      url =
          new URL(
              baseUrl,
              "http://control0.vani.utoronto.ca:8080/InterconnectionFabric/AORFabricService?wsdl");
    } catch (MalformedURLException e) {
      logger
          .warning("Failed to create URL for the wsdl Location: 'http://control0.vani.utoronto.ca:8080/InterconnectionFabric/AORFabricService?wsdl', retrying as a local file");
      logger.warning(e.getMessage());
    }
    AORFABRICSERVICE_WSDL_LOCATION = url;
  }

  public AORFabricService(URL wsdlLocation, QName serviceName) {
    super(wsdlLocation, serviceName);
  }

  public AORFabricService() {
    super(AORFABRICSERVICE_WSDL_LOCATION, new QName("fabric.WSDL.AOR",
        "AORFabricService"));
  }

  /**
   * @return returns AORFabricPortType
   */
  @WebEndpoint(name = "AORFabricPort")
  public AORFabricPortType getAORFabricPort() {
    return super.getPort(new QName("fabric.WSDL.AOR", "AORFabricPort"),
        AORFabricPortType.class);
  }

  /**
   * @param features A list of {@link javax.xml.ws.WebServiceFeature} to
   *        configure on the proxy. Supported features not in the
   *        <code>features</code> parameter will have their default values.
   * @return returns AORFabricPortType
   */
  @WebEndpoint(name = "AORFabricPort")
  public AORFabricPortType getAORFabricPort(WebServiceFeature... features) {
    return super.getPort(new QName("fabric.WSDL.AOR", "AORFabricPort"),
        AORFabricPortType.class, features);
  }
}
